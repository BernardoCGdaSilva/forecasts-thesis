# TCC forecast
# Bernardo Cainelli Gomes da Silva
# Nov - 2022
# _________________________________________________________________________________
# _____________________________ HELPER FUNCTIONS __________________________________
# _________________________________________________________________________________
source("functions.R")
# _________________________________________________________________________________
# __________________________________ DATA _________________________________________
# _________________________________________________________________________________
# get data
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
View(dolar_compra)
str(dolar_compra)
?fill_gaps
View(dolar_venda)
?fill
sales <- tibble::tribble(
~quarter, ~year, ~sales,
"Q1",    2000,    66013,
"Q2",      NA,    69182,
"Q3",      NA,    53175,
"Q4",      NA,    21001,
"Q1",    2001,    46036,
"Q2",      NA,    58842,
"Q3",      NA,    44568,
"Q4",      NA,    50197,
"Q1",    2002,    39113,
"Q2",      NA,    41668,
"Q3",      NA,    30144,
"Q4",      NA,    52897,
"Q1",    2004,    32129,
"Q2",      NA,    67686,
"Q3",      NA,    31768,
"Q4",      NA,    49094
)
sales
sales %>% fill(year)
a <- dolar_compra %>% fill(valor)
View(a)
snowy <- tourism %>%
filter(
Region == "Snowy Mountains",
Purpose == "Holiday"
)
snowy
fit <- dolar_compr %>% model(arima = ARIMA(valor))
fit <- dolar_compra %>% model(arima = ARIMA(valor))
str(snowy)
str(dolar_compra)
head(snowy)
head(dolar_compra)
fit <- dolar_compra %>% arrange(data) %>% model(arima = ARIMA(valor))
fit <- dolar_compra %>% arrange(data)# %>% model(arima = ARIMA(valor))
View(fit)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
View(dolar_compra)
fit <- dolar_compra %>% model(arima = ARIMA(valor))
snowy <- tourism %>%
filter(
Region == "Snowy Mountains",
Purpose == "Holiday"
)
snowy
fit <- snowy %>%
model(
#snaive = SNAIVE(Trips ~ lag("year")),
#ets = ETS(Trips),
arima = ARIMA(Trips)
)
fit
View(fit)
fit <- dolar_compra %>% model(arima = ARIMA(valor))
tsibbledata::hh_budget
fit <- dolar_compra %>% fabletools::model(arima = ARIMA(valor))
View(dolar_compra)
fit <- dolar_compra %>% fabletools::model(arima = ARIMA(.valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA(valor))
str(dolar_compra)
str(snowy)
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
a <- tsibble::as_tsibble(dolar_compra, index = data, key = valor)
str(a)
has_gaps(dolar_compra)
scan_gaps(dolar_compra)
View(dolar_compra)
?fill_gaps
a <- dolar_compra %>% fill_gaps()
View(a)
a <- dolar_compra %>% fill_gaps(.full = TRUE)
View(a)
count_gaps(dolar_compra)
is_regular(dolar_compra)
is_ordered(dolar_compra)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
str(dolar_compra)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
?yearmonth
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y
str(y)
y$data <- lubridate::dmy(y$data) %>% yearmonth()
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- lubridate::dmy(y$data) %>% Date()
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- lubridate::dmy(y$data) #%>% Date()
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- Date()
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- as_Date()
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- as_date()
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
str(y)
y$data <- as_date()
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- Date(y$data)
str(y)
y$data <- as_date(y$data)
str(y)
y$data <- Date(y$data)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- Date(y$data)
y$data <- as.Date(y$data)
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- as.Date(y$data, format = "%d/%m/%y")
str(y)
y$data <- lubridate::dmy(y$data)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- lubridate::dmy(y$data)
str(y)
x <- httr::GET("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- lubridate::dmy(y$data)
y$valor <- as.double(y$valor)
str(y)
z <- tsibble::as_tsibble(y, index = data, key = valor)
z
y <- tsibble::as_tsibble(y, index = data, key = valor)
y
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_compra
fit <- fabletools::model(dolar_compra, arima = ARIMA(valor))
count_gaps(dolar_compra)
a <- dolar_compra %>% fill_gaps(.full = TRUE)
gc()
View(a)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
has_gaps(dolar_compra)
View(a)
a <- dolar_compra %>% fill_gaps(.full = F)
str(dolar_compra)
# fuction to download time series from BACEN API
get_sgs <- function(api_url){
x <- httr::GET(api_url)
y <- jsonlite::fromJSON(rawToChar(x$content))
y$data <- lubridate::dmy(y$data)
y$valor <- as.double(y$valor)
colnames(y) <- c("data", "valor")
z <- tsibble::as_tsibble(y, index = data, key = valor)
z <- arrange(z, data)
return(z)
}
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
str(dolar_compra)
dolar_compra
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json")
dolar_venda
fit <- fabletools::model(dolar_compra, arima = ARIMA(valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA(dolar_compra$valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA(.$valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA(.valor))
dolar_compra$valor
a <- dolar_compra %>% fill_gaps(.full = F)
a <- dolar_compra %>% fill_gaps(.full = FALSE)
b <- dolar_compra %>% fill_gaps(.full = FALSE)
View(b)
View(dolar_compra)
a <- tsibble::as_tsibble(dolar_compra, index = data, key = valor)
fit <- fabletools::model(dolar_compra, arima = ARIMA(valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA())
fit <- fabletools::model(dolar_compra, arima = ARIMA(data))
tsibbledata::global_economy
install.packages("tsibbledata")
tsibbledata::global_economy
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json")
View(dolar_compra)
b <- dolar_compra %>% fill_gaps(.full = FALSE)
View(b)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json", "dolar_compra")
View(dolar_compra)
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json", "dolar_compra")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json", "dolar_venda")
b <- dolar_compra %>% fill_gaps(.full = FALSE)
fit <- fabletools::model(b, arima = ARIMA(valor))
View(fit)
b <- dolar_compra %>% fill_gaps(.full = FALSE) %>% fill(valor)
View(b)
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json", "dolar_compra")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json", "dolar_venda")
b <- dolar_compra %>% fill_gaps(.full = FALSE) %>% fill(valor)
View(b)
View(dolar_compra)
source("functions.R")
dolar_compra <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.10813/dados?formato=json", "dolar_compra")
dolar_venda <- get_sgs("http://api.bcb.gov.br/dados/serie/bcdata.sgs.1/dados?formato=json", "dolar_venda")
View(dolar_compra)
fit <- fabletools::model(b, arima = ARIMA(valor))
fit <- fabletools::model(dolar_compra, arima = ARIMA(valor))
fc <- fit %>%
forecast(h = 12)
fc
fc <- fit %>%
forecast(h = 12) %>% autoplot()
fit %>%
forecast(h = 12) %>% autoplot()
fit <- fabletools::model(dolar_compra,
arima = ARIMA(valor)
ets = ETS(valor))
fit <- fabletools::model(dolar_compra,
arima = ARIMA(valor),
ets = ETS(valor),
RW = SNAIVE(valor))
fit %>% accuracy()
fit %>% autoplot()
fit %>% forecast(h="30 days") %>%  autoplot()
arima = ARIMA(valor),
fit <- fabletools::model(dolar_compra,
arima = ARIMA(valor),
ets = ETS(valor),
#RW = SNAIVE(valor)
)
fit %>% accuracy()
fit %>% forecast(h="30 days") %>%  autoplot()
View(dolar_compra)
year(2000)
year("2000")
lubridate::ymd("2000/01/01")
filter(dolar_compra, data > lubridate::ymd("2000/01/01"))
fit <- fabletools::model(filter(dolar_compra, data >= lubridate::ymd("2000/01/01")),
arima = ARIMA(valor),
ets = ETS(valor),
#RW = SNAIVE(valor)
)
fit %>% accuracy()
fit %>% forecast(h="30 days") %>%  autoplot()
fit <- fabletools::model(filter(dolar_compra, data >= lubridate::ymd("2000/01/01")),
arima = ARIMA(valor),
ets = ETS(valor),
RW = SNAIVE(valor)
)
fit %>% accuracy()
fit %>% forecast(h="30 days") %>%  autoplot()
fit <- fabletools::model(filter(dolar_compra, data >= lubridate::ymd("2000/01/01")),
arima = ARIMA(valor),
ets = ETS(valor),
tetha = TETHA(valor),
RW = SNAIVE(valor)
)
fit <- fabletools::model(filter(dolar_compra, data >= lubridate::ymd("2000/01/01")),
arima = ARIMA(valor),
ets = ETS(valor),
theta = THETA(valor),
RW = SNAIVE(valor)
)
fit %>% accuracy()
fit %>% forecast(h="30 days") %>%  autoplot()
fit %>% forecast(h="90 days") %>%  autoplot()
fit %>% forecast(h = "30 days") %>%  autoplot()
fc <- fit %>% forecast(h = "30 days")
fc %>%  autoplot()
fc
View(fc)
source("~/Bernardo Cainelli Gomes da Silva/Estudo/UFRGS - Ciências Econômicas/09_TCC/forecasts-thesis/main.R", echo=TRUE)
source("~/Bernardo Cainelli Gomes da Silva/Estudo/UFRGS - Ciências Econômicas/09_TCC/forecasts-thesis/main.R", echo=TRUE)
